{"ast":null,"code":"// CPF Validation\nexport function cpfValidator(value) {\n  let numbers, digits, sum, i, result, equal_digits;\n  equal_digits = 1;\n  if (value.length < 11) return false;\n\n  for (i = 0; i < value.length - 1; i++) if (value.charAt(i) != value.charAt(i + 1)) {\n    equal_digits = 0;\n    break;\n  }\n\n  if (!equal_digits) {\n    numbers = value.substring(0, 9);\n    digits = value.substring(9);\n    sum = 0;\n\n    for (i = 10; i > 1; i--) sum += numbers.charAt(10 - i) * i;\n\n    result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n    if (result != digits.charAt(0)) return false;\n    numbers = value.substring(0, 10);\n    sum = 0;\n\n    for (i = 11; i > 1; i--) sum += numbers.charAt(11 - i) * i;\n\n    result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n    if (result != digits.charAt(1)) return false;\n    return true;\n  } else return false;\n}\n; // CNPJ Validation\n\nexport function cnpjValidator(value) {\n  let cnpj = value.replace(/[^\\d]+/g, '');\n  if (cnpj.length !== 14) return false;\n  if (/^(\\d)\\1+$/.test(cnpj)) return false;\n\n  let t = cnpj.length - 2,\n      d = cnpj.substring(t),\n      d1 = parseInt(d.charAt(0)),\n      d2 = parseInt(d.charAt(1)),\n      calc = x => {\n    let n = cnpj.substring(0, x),\n        y = x - 7,\n        s = 0,\n        r = 0;\n\n    for (let i = x; i >= 1; i--) {\n      s += n.charAt(x - i) * y--;\n      if (y < 2) y = 9;\n    }\n\n    r = 11 - s % 11;\n    return r > 9 ? 0 : r;\n  };\n\n  return calc(t) === d1 && calc(t + 1) === d2;\n}\n;","map":{"version":3,"sources":["/Users/julioaugusto/Documents/Projects/open-source/js-functions-essentials/lib/cpf-cnpj.validation.js"],"names":["cpfValidator","value","numbers","digits","sum","i","result","equal_digits","length","charAt","substring","cnpjValidator","cnpj","replace","test","t","d","d1","parseInt","d2","calc","x","n","y","s","r"],"mappings":"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","sourcesContent":["// CPF Validation\nexport function cpfValidator(value) {\n  let numbers, digits, sum, i, result, equal_digits;\n  equal_digits = 1;\n\n  if (value.length < 11) return false;\n\n  for (i = 0; i < value.length - 1; i++)\n    if (value.charAt(i) != value.charAt(i + 1)) {\n      equal_digits = 0;\n      break;\n    }\n\n  if (!equal_digits) {\n    numbers = value.substring(0, 9);\n    digits = value.substring(9);\n    sum = 0;\n\n    for (i = 10; i > 1; i--) sum += numbers.charAt(10 - i) * i;\n    result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n\n    if (result != digits.charAt(0)) return false;\n\n    numbers = value.substring(0, 10);\n    sum = 0;\n\n    for (i = 11; i > 1; i--) sum += numbers.charAt(11 - i) * i;\n    result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n\n    if (result != digits.charAt(1)) return false;\n    return true;\n  } else return false;\n};\n\n// CNPJ Validation\nexport function cnpjValidator(value) {\n  let cnpj = value.replace(/[^\\d]+/g, '');\n\n  if (cnpj.length !== 14) return false;\n\n  if (/^(\\d)\\1+$/.test(cnpj)) return false;\n\n  let t = cnpj.length - 2,\n    d = cnpj.substring(t),\n    d1 = parseInt(d.charAt(0)),\n    d2 = parseInt(d.charAt(1)),\n    calc = (x) => {\n      let n = cnpj.substring(0, x),\n        y = x - 7,\n        s = 0,\n        r = 0;\n\n      for (let i = x; i >= 1; i--) {\n        s += n.charAt(x - i) * y--;\n        if (y < 2) y = 9;\n      }\n\n      r = 11 - (s % 11);\n      return r > 9 ? 0 : r;\n    };\n  return calc(t) === d1 && calc(t + 1) === d2;\n};"]},"metadata":{},"sourceType":"module"}